Titanic %>% as_tibble()
titanic_dat <- Titanic %>% as_tibble()
View(iris)
titanic_dat %>%
ggplot(aes(Class, n, color = Species)) +
geom_point() +
theme_om() +
scale_color_om()
titanic_dat %>%
ggplot(aes(Class, n)) +
geom_point() +
theme_om() +
scale_color_om()
titanic_dat %>%
ggplot(aes(Class, n)) +
geom_bar() +
theme_om() +
scale_color_om()
titanic_dat %>%
ggplot(aes(Class, n)) +
geom_col() +
theme_om() +
scale_color_om()
View(titanic_dat)
titanic_dat %>%
ggplot(aes(Class, n)) +
geom_col() +
theme_om() +
scale_color_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Survived, n)) +
geom_col() +
theme_om() +
scale_color_om() +
facet_wrap(~Class)
Class
titanic_dat %>%
ggplot(aes(Class, n, color = Class)) +
geom_col() +
theme_om() +
scale_color_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, color = Class)) +
geom_col() +
theme_om() +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om() +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = c(0.9, 0.9)) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = c(0.75, 0.9)) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om() +
facet_wrap(~Survived)
devtools::load_all()
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "bottom") +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "bottom", axis_text = 10) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat
titanic_dat %>%
ggplot(aes(Sex, n, fill = Class)) +
geom_col() +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om() +
facet_wrap(~Survived) +
titanic_dat %>%
ggplot(aes(Sex, n, fill = Class)) +
geom_col() +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Sex, n, fill = Sex)) +
geom_col() +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Sex, n, fill = class)) +
geom_col(position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Sex, n, fill = Class)) +
geom_col(position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Sex, n, fill = Class)) +
geom_col(position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "bottom",
axis_text = 10, axis_title = 15) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Sex, n, fill = Class)) +
geom_col(position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class")
titanic_dat %>%
ggplot(aes(Sex, n, fill = Class)) +
geom_col(position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n))
titanic_dat %>%
ggplot(aes(Sex, n, fill = Class)) +
geom_col(position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n), position = position_dodge())
titanic_dat %>%
ggplot(aes(Sex, n, fill = Class)) +
geom_col(position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n), position = position_dodge(width = 1))
titanic_dat %>%
ggplot(aes(Sex, n, fill = Class)) +
geom_col(position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n, fill = Class), position = position_dodge(width = 1))
titanic_dat %>%
ggplot(aes(Sex, n, fill = Class)) +
geom_col(position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n, color = Class), position = position_dodge(width = 1))
titanic_dat %>%
ggplot(aes(Sex, n)) +
geom_col(aes(fill = Class), position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n, color = Class), position = position_dodge(width = 1))
titanic_dat %>%
ggplot(aes(Sex, n)) +
geom_col(aes(fill = Class), position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n), position = position_dodge(width = 1))
titanic_dat %>%
ggplot(aes(Sex, n)) +
geom_col(aes(fill = Class), position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n, group = Class), position = position_dodge(width = 1))
titanic_dat %>%
ggplot(aes(Sex, n)) +
geom_col(aes(fill = Class), position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n, group = Class), position = position_dodge(width = 0.5))
titanic_dat %>%
ggplot(aes(Sex, n)) +
geom_col(aes(fill = Class), position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n, group = Class), position = position_dodge(width = 1))
titanic_dat
titanic_dat %>%
count(Class, Sex)
titanic_dat %>%
ggplot(aes(Sex, n)) +
geom_col(aes(fill = Class), position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n, group = Class), position = position_dodge(width = 1))
titanic_dat
titanic_dat %>%
ggplot(aes(Sex, n)) +
geom_col(aes(fill = Class), position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_grid(Class~Age) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n, group = Class), position = position_dodge(width = 1))
wrap(~Survived)
titanic_dat %>%
ggplot(aes(Sex, n)) +
geom_col(aes(fill = Class), position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class") +
geom_text(aes(label = n, group = Class), position = position_dodge(width = 1))
titanic_dat %>%
ggplot(aes(Sex, n)) +
geom_col(aes(fill = Class), position = position_dodge()) +
theme_om(legend_position = c(0.9, 0.75)) +
scale_fill_om("Class") +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class")
devtools::document()
devtools::install_github("favstats/openmindR")
library(openmindR)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "bottom",
axis_text = 10, axis_title = 15) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "bottom",
axis_text_size = 10, axis_title_size = 15) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "bottom",
axis_text_size = 10,
axis_title_size = 15, legend_text_size = 10) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "bottom",
axis_text_size = 10,
axis_title_size = 15,
legend_text_size = 10,
title_size = 10) +
scale_fill_om() +
facet_wrap(~Survived)
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "bottom",
axis_text_size = 10,
axis_title_size = 15,
legend_text_size = 10,
title_size = 10) +
scale_fill_om() +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class")
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "bottom",
axis_text_size = 10,
axis_title_size = 15,
legend_text_size = 10,
title_size = 20) +
scale_fill_om() +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class")
#' A ggplot2 theme
#'
#' This function can be added to a ggplot2 call and creates the official OpenMind ggplot theme
#' @param legend_position Specify Legend position c(x, y)
#' @param axis.text Specify Axis Text size
#' @param axis.title Specify Title Text size
#' @param legend.text.size Specify Legend Text size
#' @param title.size Specify Title Text size
#' @export
theme_om <- function(legend_position = c(.55, .93),
axis_text_size = 20,
axis_title_size = 20,
legend_text_size = 24,
title_size = 26,
overall_text_size = 24){
theme(panel.background = element_rect(fill="white"),
legend.text = element_text(size=legend_text_size),
legend.position = legend_position,
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5, size=title_size),
axis.line.x = element_line(),
axis.line.y = element_line(),
axis.text.x = element_text(color = "grey20", size = axis_text_size),
axis.text.y = element_text(color = "grey20", size = axis_text_size),
axis.title.x = element_text(color = "grey20", size = axis_title_size),
axis.title.y = element_text(color = "grey20", size = axis_title_size),
text = element_text(family="Poppins",size=24))
}
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "top",
overall_text_size = 10) +
scale_fill_om() +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class")
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "bottom",
axis_text_size = 10,
axis_title_size = 15,
legend_text_size = 10,
title_size = 20) +
scale_fill_om() +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class")
titanic_dat %>%
ggplot(aes(Class, n, fill = Class)) +
geom_col() +
theme_om(legend_position = "top",
overall_text_size = 15) +
scale_fill_om() +
facet_wrap(~Survived) +
labs(title = "Titanic Survival by Age and Class")
devtools::install_github("favstats/openmindR")
devtools::document()
devtools::document()
devtools::install_github("favstats/openmindR")
devtools::document()
devtools::document()
#'
#'  Pink : #ec145b
#'
#'  Green : #94cfa1
#'
#'  Black : #414042
#'
#' This object contains a palette with the official OpenMind colors
#' @export
#'
get_hc_theme_om <- function() {
theme_hc_om <- highcharter::hc_theme_merge(
hc_theme_smpl(),
hc_theme(
chart = list(
colors = openmindR::pal_om(7),
dstyle = list(
fontFamily = "Poppins", color = "black"
)
),
title = list(
style = list(
color = 'black',
fontFamily = "Poppins"
)
),
subtitle = list(
style = list(
color = 'black',
fontFamily = "Poppins"
)
),
subtitle = list(
style = list(
color = 'black',
fontFamily = "Poppins"
)
),
tooltip = list(
style = list(
color = 'black',
fontFamily = "Poppins"
)
),
toolbar = list(
style = list(
color = 'black',
fontFamily = "Poppins"
)
),
credits = list(
style = list(
color = 'black',
fontFamily = "Poppins"
)
),
labels = list(
style = list(
color = 'black',
fontFamily = "Poppins"
)
),
yAxis = list(
style = list(
color = 'black',
fontFamily = "Poppins"
)
),
xAxis = list(
style = list(
color = 'black',
fontFamily = "Poppins"
)
)
)
)
return(theme_hc_om)
}
devtools::document()
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(psych) # for descriptive stats
library(psy)
library(pander)
library(EFAutilities) # exploratory factor analysis
library(stargazer) # to create tables
library(knitr) # to produce the HTML markdown report
library(kableExtra)
library(nFactors)
library(sjPlot)
library(tidyr)
library(plyr)
library(dplyr) # manipulate data shape/format; make sure to load this AFTER 'plyr'
library(effsize) # grab effect sizes
require(ggvis)
library(grid) # for annotating figures
require(gridExtra)
library(plotly) # to make interactive plots
library(lmerTest) # Mixed model package by Douglas Bates, comes w/ pvalues!
library(texreg) #Helps us make tables of the mixed models
library(data.table)
library(plotrix)
library(Rmisc) #summary SE within
library(ggplot2) #for all visualization needs
library(extrafont) #to use custom font for OM branding
library(extrafontdb)
library(scales)
library(prettyR)
library(corrplot) # pretty correlation visualization
library(gridGraphics)
library(Rmisc) #summary SE within
library(DiagrammeR)# for flowchart
panderOptions('digits', 3)
panderOptions('round', 3)
panderOptions('keep.trailing.zeros', TRUE)
Mode <- function(x, na.rm = FALSE) {
if(na.rm){
x = x[!is.na(x)]
}
ux <- unique(x)
return(ux[which.max(tabulate(match(x, ux)))])
}
propmiss <- function(dataframe) {
m <- sapply(dataframe, function(x) {
data.frame(
nmiss=sum(is.na(x)),
n=length(x),
ncum=length(x)-sum(is.na(x)),
propmiss=sum(is.na(x))/length(x)
)
})
d <- data.frame(t(m))
d <- sapply(d, unlist)
d <- as.data.frame(d)
d$variable <- row.names(d)
row.names(d) <- NULL
d <- cbind(d[ncol(d)],d[-ncol(d)])
return(d[order(d$propmiss), ])
}
setwd("C:/Users/Fabio/Dropbox/OM C+R+M/Research/V4/Wilkes/Start to Finish")
devtools::document()
